/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/pointing.h>

/ {
    behaviors {
        HMR: HMR {
            compatible = "zmk,behavior-hold-tap";
            label = "HMR";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "balanced";
            hold-trigger-on-release;
            hold-trigger-key-positions = <0 1 2 3 4 5 17 16 15 14 13 12 24 26 25 27 28 29>;
            require-prior-idle-ms = <100>;
        };

        HML: HML {
            compatible = "zmk,behavior-hold-tap";
            label = "HML";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "balanced";
            hold-trigger-on-release;
            require-prior-idle-ms = <100>;
            hold-trigger-key-positions = <30 18 6 7 19 31 32 20 8 10 9 21 33 35 22 34 23 11>;
        };
    };

    combos {
        compatible = "zmk,combos";

        hyperm {
            bindings = <&kp LC(LA(LS(LG(M))))>;
            key-positions = <18 19>;
        };

        hypere {
            bindings = <&kp LS(LA(LC(LG(E))))>;
            key-positions = <16 17>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base {
            display-name = "base";
            bindings = <
&kp TAB                &kp Q         &kp W  &kp F          &kp P  &kp B       &kp J      &kp L  &kp U          &kp Y    &kp SEMI      &kp LS(LA(LC(LG(Q))))
&kp LGUI               &HML LCTRL A  &kp R  &HML LSHIFT S  &kp T  &kp G       &kp M      &kp N  &HMR RSHFT E   &kp I    &HMR RCTRL O  &kp RET
&kp LS(LA(LC(LG(E))))  &kp Z         &kp X  &kp C          &kp D  &kp V       &kp K      &kp H  &kp COMMA      &kp DOT  &kp FSLH      &kp LA(LS(LC(LG(M))))
                                            &kp ESC        &mo 1  &kp BSPC    &kp SPACE  &mo 2  &kp RIGHT_ALT
            >;
        };

        ctrl {
            display-name = "ctrl";
            bindings = <
&kp C_BRI_DN  &kp C_BRI_UP  &kp C_VOL_DN  &kp C_MUTE  &kp C_VOL_UP      &HML LG(LS(N4)) LS(LG(S))    &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &kp DOWN  &kp RIGHT  &kp LG(MINUS)  &kp LG(EQUAL)
&caps_word    &kp N1        &kp N2        &kp N3      &kp N4            &kp N5                       &kp N6          &kp N7           &kp N8    &kp N9     &kp N0         &kp LC(B)
&trans        &mkp MB2      &kp C_PREV    &kp C_PP    &HML LGUI C_NEXT  &mkp MB1                     &mmv MOVE_UP    &mmv MOVE_LEFT   &kp UP    &kp LEFT   &kp LG(LEFT)   &kp LG(RIGHT)
                                          &trans      &trans            &trans                       &trans          &trans           &trans
            >;
        };

        sym {
            display-name = "sym";
            bindings = <
&trans  &kp GRAVE  &kp TILDE  &kp DQT   &kp SQT    &kp PRCNT    &kp CARET  &kp LPAR  &kp RPAR  &kp DLLR  &kp PIPE  &trans
&trans  &kp MINUS  &kp UNDER  &kp PLUS  &kp EXCL   &kp EQUAL    &trans     &kp LBRC  &kp RBRC  &kp STAR  &kp SEMI  &kp COLON
&trans  &trans     &kp BSLH   &kp HASH  &kp QMARK  &kp AMPS     &kp AT     &kp LBKT  &kp RBKT  &kp BSLH  &kp FSLH  &trans
                              &trans    &trans     &trans       &trans     &trans    &trans
            >;
        };
    };
};
