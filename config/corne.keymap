/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

/ {
    behaviors {
        HMR: HMR {
            compatible = "zmk,behavior-hold-tap";
            label = "HMR";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "balanced";
            hold-trigger-on-release;
            hold-trigger-key-positions = <0 1 2 3 4 5 17 16 15 14 13 12 24 26 25 27 28 29>;
            require-prior-idle-ms = <100>;
        };

        HML: HML {
            compatible = "zmk,behavior-hold-tap";
            label = "HML";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "balanced";
            hold-trigger-on-release;
            require-prior-idle-ms = <100>;
            hold-trigger-key-positions = <30 18 6 7 19 31 32 20 8 10 9 21 33 35 22 34 23 11>;
        };
    };

    combos {
        compatible = "zmk,combos";

        click {
            bindings = <&kp LC(LS(LG(M)))>;
            key-positions = <32 31 33>;
        };

        scroll {
            bindings = <&kp LS(LA(LC(LG(M))))>;
            key-positions = <27 28 26>;
        };
    };

    macros {
        colonW: colonW {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp COLON &kp W>;
            label = "COLONW";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base {
            display-name = "base";
            bindings = <
&kp TAB            &kp Q  &kp W  &kp F     &kp P  &kp B        &kp J      &kp L  &kp U          &kp Y    &kp SEMI  &kp BACKSPACE
&HML LCTRL ESCAPE  &kp A  &kp R  &kp S     &kp T  &kp G        &kp M      &kp N  &kp E          &kp I    &kp O     &kp RET
&kp LGUI           &kp Z  &kp X  &kp C     &kp D  &kp V        &kp K      &kp H  &kp COMMA      &kp DOT  &kp FSLH  &kp LA(LS(LC(Q)))
                                 &kp LGUI  &mo 1  &kp LSHFT    &kp SPACE  &mo 2  &kp RIGHT_ALT
            >;
        };

        ctrl {
            display-name = "ctrl";
            bindings = <
&trans  &mkp MB2        &mmv MOVE_UP      &mkp MB1         &kp C_VOL_UP  &kp C_BRI_UP    &kp TILDE  &kp N7  &kp N8  &kp N9  &kp PIPE       &trans
&trans  &mmv MOVE_LEFT  &mmv MOVE_DOWN    &mmv MOVE_RIGHT  &kp C_MUTE    &trans          &colonW    &kp N4  &kp N5  &kp N6  &kp SEMICOLON  &trans
&trans  &kp C_RW        &kp C_PLAY_PAUSE  &kp C_FF         &kp C_VOL_DN  &kp C_BRI_DN    &kp LC(B)  &kp N1  &kp N2  &kp N3  &kp SLASH      &trans
                                          &trans           &trans        &trans          &trans     &kp N0  &trans
            >;
        };

        sym {
            display-name = "sym";
            bindings = <
&trans  &kp GRAVE  &kp TILDE  &kp DQT   &kp SQT    &kp PRCNT    &kp CARET  &kp LPAR  &kp RPAR  &kp DLLR  &kp PIPE  &trans
&trans  &kp MINUS  &kp UNDER  &kp PLUS  &kp EXCL   &kp EQUAL    &kp COLON  &kp LBRC  &kp RBRC  &kp STAR  &kp SEMI  &trans
&trans  &kp HASH   &kp LT     &kp GT    &kp QMARK  &kp AMPS     &kp AT     &kp LBKT  &kp RBKT  &kp BSLH  &kp FSLH  &trans
                              &trans    &trans     &trans       &trans     &trans    &trans
            >;
        };
    };
};
